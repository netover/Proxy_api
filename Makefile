# Makefile para Testes de Muta√ß√£o

.PHONY: help install-mutmut test-mutation test-mutation-expanded test-mutation-eliminate test-mutation-threshold clean-mutation

# Configura√ß√µes padr√£o
THRESHOLD ?= 95.0
CONFIG ?= pyproject.toml
REPORT ?= mutation_test_report.json

help: ## Mostra ajuda
	@echo "üß¨ Testes de Muta√ß√£o - Comandos Dispon√≠veis:"
	@echo ""
	@echo "  make install-mutmut              - Instala o mutmut"
	@echo "  make test-mutation               - Executa testes de muta√ß√£o b√°sicos"
	@echo "  make test-mutation-expanded      - Executa testes de muta√ß√£o expandidos"
	@echo "  make test-mutation-eliminate     - Executa testes para eliminar muta√ß√µes restantes"
	@echo "  make test-mutation-threshold     - Executa testes com threshold espec√≠fico"
	@echo "  make clean-mutation             - Limpa arquivos de muta√ß√£o"
	@echo ""
	@echo "Exemplos:"
	@echo "  make test-mutation THRESHOLD=90.0"
	@echo "  make test-mutation-expanded THRESHOLD=98.0"
	@echo "  make test-mutation-eliminate THRESHOLD=95.0"

install-mutmut: ## Instala o mutmut
	@echo "üì¶ Instalando mutmut..."
	pip install --break-system-packages mutmut
	@echo "‚úÖ mutmut instalado com sucesso!"

test-mutation: ## Executa testes de muta√ß√£o b√°sicos
	@echo "üß¨ Executando testes de muta√ß√£o b√°sicos..."
	python run_mutation_tests.py --threshold $(THRESHOLD) --config $(CONFIG) --report $(REPORT)

test-mutation-expanded: ## Executa testes de muta√ß√£o expandidos
	@echo "üß¨ Executando testes de muta√ß√£o expandidos..."
	python run_expanded_mutation_tests.py --threshold $(THRESHOLD) --config expanded_pyproject.toml --report expanded_$(REPORT)

test-mutation-eliminate: ## Executa testes para eliminar muta√ß√µes restantes
	@echo "üß¨ Executando testes para eliminar muta√ß√µes restantes..."
	python run_eliminate_mutations.py --threshold $(THRESHOLD) --config simple_pyproject.toml --report eliminate_$(REPORT) --show-survived

test-mutation-threshold: ## Executa testes com threshold espec√≠fico
	@echo "üß¨ Executando testes de muta√ß√£o com threshold $(THRESHOLD)%..."
	python run_mutation_tests.py --threshold $(THRESHOLD) --config $(CONFIG) --report threshold_$(THRESHOLD)_$(REPORT)

clean-mutation: ## Limpa arquivos de muta√ß√£o
	@echo "üßπ Limpando arquivos de muta√ß√£o..."
	rm -rf mutants/
	rm -f mutation_test_report.json
	rm -f expanded_mutation_test_report.json
	rm -f eliminate_mutations_report.json
	rm -f threshold_*_mutation_test_report.json
	@echo "‚úÖ Arquivos de muta√ß√£o limpos!"

# Comandos espec√≠ficos para diferentes thresholds
test-mutation-90: ## Executa testes com threshold 90%
	@$(MAKE) test-mutation THRESHOLD=90.0

test-mutation-95: ## Executa testes com threshold 95%
	@$(MAKE) test-mutation THRESHOLD=95.0

test-mutation-98: ## Executa testes com threshold 98%
	@$(MAKE) test-mutation THRESHOLD=98.0

# Comandos para diferentes tipos de teste
test-mutation-core: ## Executa testes apenas nos m√≥dulos core
	@echo "üß¨ Executando testes de muta√ß√£o nos m√≥dulos core..."
	cp expanded_pyproject.toml pyproject.toml
	python run_mutation_tests.py --threshold $(THRESHOLD) --config pyproject.toml --report core_$(REPORT)

test-mutation-api: ## Executa testes apenas nos m√≥dulos de API
	@echo "üß¨ Executando testes de muta√ß√£o nos m√≥dulos de API..."
	cp expanded_pyproject.toml pyproject.toml
	python run_mutation_tests.py --threshold $(THRESHOLD) --config pyproject.toml --report api_$(REPORT)

# Comandos para relat√≥rios
report-mutation: ## Gera relat√≥rio dos testes de muta√ß√£o
	@echo "üìä Gerando relat√≥rio dos testes de muta√ß√£o..."
	@if [ -f mutation_test_report.json ]; then \
		python -c "import json; data=json.load(open('mutation_test_report.json')); print(f'Taxa de detec√ß√£o: {data[\"results\"][\"detection_rate\"]:.1f}%'); print(f'Threshold: {data[\"threshold\"]}%'); print(f'Passou: {data[\"passed\"]}')"; \
	else \
		echo "‚ùå Nenhum relat√≥rio encontrado. Execute os testes primeiro."; \
	fi

# Comandos para CI/CD
ci-mutation-test: ## Executa testes de muta√ß√£o para CI/CD
	@echo "üöÄ Executando testes de muta√ß√£o para CI/CD..."
	@$(MAKE) test-mutation THRESHOLD=95.0
	@$(MAKE) test-mutation-expanded THRESHOLD=90.0
	@$(MAKE) test-mutation-eliminate THRESHOLD=95.0
	@echo "‚úÖ Todos os testes de muta√ß√£o executados!"

# Comandos para desenvolvimento
dev-mutation-test: ## Executa testes de muta√ß√£o para desenvolvimento
	@echo "üîß Executando testes de muta√ß√£o para desenvolvimento..."
	@$(MAKE) test-mutation THRESHOLD=90.0
	@echo "‚úÖ Testes de muta√ß√£o para desenvolvimento executados!"

# Comandos para produ√ß√£o
prod-mutation-test: ## Executa testes de muta√ß√£o para produ√ß√£o
	@echo "üè≠ Executando testes de muta√ß√£o para produ√ß√£o..."
	@$(MAKE) test-mutation THRESHOLD=98.0
	@$(MAKE) test-mutation-expanded THRESHOLD=95.0
	@echo "‚úÖ Testes de muta√ß√£o para produ√ß√£o executados!"