[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "llm-proxy-suite"
version = "1.0.0"
description = "Complete LLM Proxy suite with modular architecture"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "ProxyAPI Team", email = "team@proxyapi.dev"}
]

[project.optional-dependencies]
core = ["proxy-core>=1.0.0"]
context = ["proxy-context>=1.0.0"]
logging = ["proxy-logging>=1.0.0"]
api = ["proxy-api>=1.0.0"]
all = [
    "proxy-core>=1.0.0",
    "proxy-context>=1.0.0",
    "proxy-logging>=1.0.0",
    "proxy-api>=1.0.0",
]
dev = [
    "pytest>=8.4.2",
    "pytest-asyncio>=0.21.0",
    "mypy>=1.9.0",
    "black>=24.0.0",
    "ruff>=0.5.0",
    "isort>=5.13.0",
    "pre-commit>=3.5.0",
]

[tool.mypy]
python_version = "3.8"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3