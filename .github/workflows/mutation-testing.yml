name: Mutation Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'tests/**'
      - 'requirements*.txt'

jobs:
  mutation-testing:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt

    - name: Cache mutation testing database
      uses: actions/cache@v3
      with:
        path: .mutmut-cache
        key: mutation-${{ runner.os }}-${{ github.sha }}
        restore-keys: |
          mutation-${{ runner.os }}-

    - name: Run mutation testing (incremental)
      run: |
        # Run mutation testing incrementally to avoid re-running all mutations
        mutmut run --paths-to-mutate=src/ --tests-dir=tests/ --runner="python -m pytest -x" --dict-synonyms="True,False" --dict-synonyms="true,false" --pre-mutation="python -c 'import sys; sys.exit(0)'" --post-mutation="python -c 'import sys; sys.exit(0)'"

    - name: Generate mutation testing report
      run: |
        echo "## Mutation Testing Results" >> $GITHUB_STEP_SUMMARY
        mutmut results | tee -a $GITHUB_STEP_SUMMARY
        mutmut html

    - name: Upload mutation testing report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: mutation-testing-report-${{ github.sha }}
        path: html/
        retention-days: 7

    - name: Comment PR with results
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          const results = fs.readFileSync('.mutmut-cache/results.txt', 'utf8');
          const summary = results.split('\n').slice(0, 10).join('\n');

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## ðŸ”¬ Mutation Testing Results\n\n${summary}\n\n[Full Report](${{ steps.upload-artifacts.outputs.artifact-url }})`
          });
